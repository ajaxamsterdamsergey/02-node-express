let express,morgan,cors,contactsRouter;_86d‍.x([["CrudServer",()=>CrudServer]]);_86d‍.w("express",[["default",["express"],function(v){express=v}]]);_86d‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_86d‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_86d‍.w("./contacts/contacts.router",[["contactsRouter",["contactsRouter"],function(v){contactsRouter=v}]]);




const PORT = 3000;

       class CrudServer {
  constructor() {
    this.server = null;
  }

  start() {
    this.initServer();
    this.initMiddleware();
    this.initDatabase();
    this.initRoutes();
    this.handleErrors();
    this.startListening();
  }

  initServer() {
    this.server = express();
  }

  initMiddleware() {
    this.server.use(express.json());
    this.server.use(cors({ origin: 'http://localhost:3000' }));
    this.server.use(morgan('tiny'));
  }

  initDatabase() {}

  initRoutes() {
    this.server.use('/contacts', contactsRouter);
  }

  handleErrors() {
    this.server.use((err, req, res, next) => {
      delete err.stack;

      return res.status(err.status).send(`message: ${err.message}`);
    });
  }

  startListening() {
    this.server.listen(PORT, () => {
      _86d‍.g.console.log('Server started listening on port', PORT);
    });
  }
}